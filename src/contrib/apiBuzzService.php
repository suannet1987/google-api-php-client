<?php
/*
 * Copyright 2010 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The Buzz service implementation
 *
 * Generated by http://code.google.com/p/google-api-php-client/
 * Generated from: https://www.googleapis.com/discovery/v0.2beta1/describe/buzz/v1
 **/
class apiBuzzService {

  // Variables that the apiServiceResource implementation depends on
  private $serviceName = 'buzz';
  private $version = 'v1';
  private $restBasePath = 'https://www.googleapis.com/buzz/v1/';
  private $rpcPath = 'https://www.googleapis.com/rpc';
  private $io;
  // apiServiceResource's that are used internally
  private $activities;
  private $comments;
  private $groups;
  private $people;
  private $photoAlbums;
  private $photos;
  private $related;

  /**
   * Constructs the internal service representations and does the auto-magic configuration required to drive them
   */
  public function __construct(apiClient $apiClient) {
    $apiClient->addService('buzz', 'v1');
    $this->io = $apiClient->getIo();
    $this->activities = new apiServiceResource($this, $this->serviceName, 'activities', json_decode('{"methods":{"count":{"restPath":"activities\/count","rpcMethod":"chili.activities.count","httpMethod":"GET","parameters":{"hl":{"restParameterType":"query","required":false,"repeated":false}}},"delete":{"restPath":"activities\/{userId}\/{scope}\/{postId}","rpcMethod":"chili.activities.delete","httpMethod":"DELETE","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"extractPeopleFromSearch":{"restPath":"activities\/search\/@people","rpcMethod":"chili.activities.extractPeopleFromSearch","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"bbox":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"lat":{"restParameterType":"query","required":false,"repeated":false},"lon":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"pid":{"restParameterType":"query","required":false,"repeated":false},"q":{"restParameterType":"query","required":false,"repeated":false},"radius":{"restParameterType":"query","required":false,"repeated":false}}},"get":{"restPath":"activities\/{userId}\/@self\/{postId}","rpcMethod":"chili.activities.get","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"targetLang":{"restParameterType":"query","required":false,"repeated":false},"truncateAtom":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"insert":{"restPath":"activities\/{userId}\/@self","rpcMethod":"chili.activities.insert","httpMethod":"POST","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"preview":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"list":{"restPath":"activities\/{userId}\/{scope}","rpcMethod":"chili.activities.list","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-comments":{"restParameterType":"query","required":false,"repeated":false},"max-liked":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"scope":{"restParameterType":"path","pattern":"@(self|public|consumption|liked|comments)*","required":true,"repeated":false},"targetLang":{"restParameterType":"query","required":false,"repeated":false},"truncateAtom":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"search":{"restPath":"activities\/search","rpcMethod":"chili.activities.search","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"bbox":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"lat":{"restParameterType":"query","required":false,"repeated":false},"lon":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"pid":{"restParameterType":"query","required":false,"repeated":false},"q":{"restParameterType":"query","required":false,"repeated":false},"radius":{"restParameterType":"query","required":false,"repeated":false},"targetLang":{"restParameterType":"query","required":false,"repeated":false},"truncateAtom":{"restParameterType":"query","required":false,"repeated":false}}},"track":{"restPath":"activities\/track","rpcMethod":"chili.activities.track","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"bbox":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"lat":{"restParameterType":"query","required":false,"repeated":false},"lon":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"pid":{"restParameterType":"query","required":false,"repeated":false},"q":{"restParameterType":"query","required":false,"repeated":false},"radius":{"restParameterType":"query","required":false,"repeated":false}}},"update":{"restPath":"activities\/{userId}\/{scope}\/{postId}","rpcMethod":"chili.activities.update","httpMethod":"PUT","parameters":{"abuseType":{"restParameterType":"query","required":false,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
    $this->comments = new apiServiceResource($this, $this->serviceName, 'comments', json_decode('{"methods":{"delete":{"restPath":"activities\/{userId}\/@self\/{postId}\/@comments\/{commentId}","rpcMethod":"chili.comments.delete","httpMethod":"DELETE","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"commentId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"get":{"restPath":"activities\/{userId}\/@self\/{postId}\/@comments\/{commentId}","rpcMethod":"chili.comments.get","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"commentId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"targetLang":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"insert":{"restPath":"activities\/{userId}\/@self\/{postId}\/@comments","rpcMethod":"chili.comments.insert","httpMethod":"POST","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"list":{"restPath":"activities\/{userId}\/{scope}\/{postId}\/@comments","rpcMethod":"chili.comments.list","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"targetLang":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"update":{"restPath":"activities\/{userId}\/{scope}\/{postId}\/@comments\/{commentId}","rpcMethod":"chili.comments.update","httpMethod":"PUT","parameters":{"abuseType":{"restParameterType":"query","required":false,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"commentId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
    $this->groups = new apiServiceResource($this, $this->serviceName, 'groups', json_decode('{"methods":{"delete":{"restPath":"people\/{userId}\/@groups\/{groupId}","rpcMethod":"chili.groups.delete","httpMethod":"DELETE","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"get":{"restPath":"people\/{userId}\/@groups\/{groupId}\/@self","rpcMethod":"chili.groups.get","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"insert":{"restPath":"people\/{userId}\/@groups","rpcMethod":"chili.groups.insert","httpMethod":"POST","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"list":{"restPath":"people\/{userId}\/@groups","rpcMethod":"chili.groups.list","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"update":{"restPath":"people\/{userId}\/@groups\/{groupId}\/@self","rpcMethod":"chili.groups.update","httpMethod":"PUT","parameters":{"groupId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
    $this->people = new apiServiceResource($this, $this->serviceName, 'people', json_decode('{"methods":{"delete":{"restPath":"people\/{userId}\/@groups\/{groupId}\/{personId}","rpcMethod":"chili.people.delete","httpMethod":"DELETE","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"personId":{"restParameterType":"path","pattern":"(?!@self).*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"get":{"restPath":"people\/{userId}\/@self","rpcMethod":"chili.people.get","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"liked":{"restPath":"activities\/{userId}\/{scope}\/{postId}\/{groupId}","rpcMethod":"chili.people.liked","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"@liked","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"list":{"restPath":"people\/{userId}\/@groups\/{groupId}","rpcMethod":"chili.people.list","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"relatedToUri":{"restPath":"people\/{userId}\/@related","rpcMethod":"chili.people.relatedToUri","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"uri":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"reshared":{"restPath":"activities\/{userId}\/{scope}\/{postId}\/{groupId}","rpcMethod":"chili.people.reshared","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"@reshared","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"search":{"restPath":"people\/search","rpcMethod":"chili.people.search","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"q":{"restParameterType":"query","required":false,"repeated":false}}},"update":{"restPath":"people\/{userId}\/@groups\/{groupId}\/{personId}","rpcMethod":"chili.people.update","httpMethod":"PUT","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"groupId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"personId":{"restParameterType":"path","pattern":"(?!@self).*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
    $this->photoAlbums = new apiServiceResource($this, $this->serviceName, 'photoAlbums', json_decode('{"methods":{"delete":{"restPath":"photos\/{userId}\/@self\/{albumId}","rpcMethod":"chili.photoAlbums.delete","httpMethod":"DELETE","parameters":{"albumId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"get":{"restPath":"photos\/{userId}\/@self\/{albumId}","rpcMethod":"chili.photoAlbums.get","httpMethod":"GET","parameters":{"albumId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"insert":{"restPath":"photos\/{userId}\/@self","rpcMethod":"chili.photoAlbums.insert","httpMethod":"POST","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"list":{"restPath":"photos\/{userId}\/{scope}","rpcMethod":"chili.photoAlbums.list","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"scope":{"restParameterType":"path","pattern":"@(self)*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
    $this->photos = new apiServiceResource($this, $this->serviceName, 'photos', json_decode('{"methods":{"delete":{"restPath":"photos\/{userId}\/@self\/{albumId}\/@photos\/{photoId}","rpcMethod":"chili.photos.delete","httpMethod":"DELETE","parameters":{"albumId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"photoId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"get":{"restPath":"photos\/{userId}\/@self\/{albumId}\/@photos\/{photoId}","rpcMethod":"chili.photos.get","httpMethod":"GET","parameters":{"albumId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"photoId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"insert":{"restPath":"photos\/{userId}\/{albumId}","rpcMethod":"chili.photos.insert","httpMethod":"POST","parameters":{"albumId":{"restParameterType":"path","pattern":"(@new|[^@].*)","required":true,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"insert2":{"restPath":"photos\/{userId}\/@self\/{albumId}\/@photos","rpcMethod":"chili.photos.insert2","httpMethod":"GET","parameters":{"albumId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"listByAlbum":{"restPath":"photos\/{userId}\/@self\/{albumId}\/@photos","rpcMethod":"chili.photos.listByAlbum","httpMethod":"GET","parameters":{"albumId":{"restParameterType":"path","pattern":"[^@].*","required":true,"repeated":false},"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}},"listByScope":{"restPath":"photos\/{userId}\/@self\/{scope}\/@photos","rpcMethod":"chili.photos.listByScope","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
    $this->related = new apiServiceResource($this, $this->serviceName, 'related', json_decode('{"methods":{"list":{"restPath":"activities\/{userId}\/{scope}\/{postId}\/@related","rpcMethod":"chili.related.list","httpMethod":"GET","parameters":{"alt":{"restParameterType":"query","required":false,"repeated":false},"c":{"restParameterType":"query","required":false,"repeated":false},"hl":{"restParameterType":"query","required":false,"repeated":false},"max-results":{"restParameterType":"query","required":false,"repeated":false},"postId":{"restParameterType":"path","pattern":".*","required":true,"repeated":false},"scope":{"restParameterType":"path","pattern":"@.*","required":true,"repeated":false},"userId":{"restParameterType":"path","pattern":"[^\/]+","required":true,"repeated":false}}}}}', true));
  }

  /**
   * Implementation of the chili.activities.count method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.count
   *
   * @param $hl optional
   */
  public function countActivities($hl = null) {
    return $this->activities->__call('count', array(array('hl' => $hl)));
  }

  /**
   * Implementation of the chili.activities.delete method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.delete
   *
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $hl optional
   */
  public function deleteActivities($postId, $scope, $userId, $hl = null) {
    return $this->activities->__call('delete', array(array('postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.activities.extractPeopleFromSearch method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.extractPeopleFromSearch
   *
   * @param $bbox optional
   * @param $c optional
   * @param $hl optional
   * @param $lat optional
   * @param $lon optional
   * @param $max_results optional
   * @param $pid optional
   * @param $q optional
   * @param $radius optional
   */
  public function extractPeopleFromSearchActivities($bbox = null, $c = null, $hl = null, $lat = null, $lon = null, $max_results = null, $pid = null, $q = null, $radius = null) {
    return $this->activities->__call('extractPeopleFromSearch', array(array('bbox' => $bbox, 'c' => $c, 'hl' => $hl, 'lat' => $lat, 'lon' => $lon, 'max-results' => $max_results, 'pid' => $pid, 'q' => $q, 'radius' => $radius)));
  }

  /**
   * Implementation of the chili.activities.get method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.get
   *
   * @param $postId required
   * @param $userId required
   * @param $hl optional
   * @param $targetLang optional
   * @param $truncateAtom optional
   */
  public function getActivities($postId, $userId, $hl = null, $targetLang = null, $truncateAtom = null) {
    return $this->activities->__call('get', array(array('postId' => $postId, 'userId' => $userId, 'hl' => $hl, 'targetLang' => $targetLang, 'truncateAtom' => $truncateAtom)));
  }

  /**
   * Implementation of the chili.activities.insert method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.insert
   *
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   * @param $preview optional
   */
  public function insertActivities($userId, $postBody, $hl = null, $preview = null) {
    return $this->activities->__call('insert', array(array('userId' => $userId, 'postBody' => $postBody, 'hl' => $hl, 'preview' => $preview)));
  }

  /**
   * Implementation of the chili.activities.list method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.list
   *
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_comments optional
   * @param $max_liked optional
   * @param $max_results optional
   * @param $targetLang optional
   * @param $truncateAtom optional
   */
  public function listActivities($scope, $userId, $c = null, $hl = null, $max_comments = null, $max_liked = null, $max_results = null, $targetLang = null, $truncateAtom = null) {
    return $this->activities->__call('list', array(array('scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-comments' => $max_comments, 'max-liked' => $max_liked, 'max-results' => $max_results, 'targetLang' => $targetLang, 'truncateAtom' => $truncateAtom)));
  }

  /**
   * Implementation of the chili.activities.search method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.search
   *
   * @param $bbox optional
   * @param $c optional
   * @param $hl optional
   * @param $lat optional
   * @param $lon optional
   * @param $max_results optional
   * @param $pid optional
   * @param $q optional
   * @param $radius optional
   * @param $targetLang optional
   * @param $truncateAtom optional
   */
  public function searchActivities($bbox = null, $c = null, $hl = null, $lat = null, $lon = null, $max_results = null, $pid = null, $q = null, $radius = null, $targetLang = null, $truncateAtom = null) {
    return $this->activities->__call('search', array(array('bbox' => $bbox, 'c' => $c, 'hl' => $hl, 'lat' => $lat, 'lon' => $lon, 'max-results' => $max_results, 'pid' => $pid, 'q' => $q, 'radius' => $radius, 'targetLang' => $targetLang, 'truncateAtom' => $truncateAtom)));
  }

  /**
   * Implementation of the chili.activities.track method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.track
   *
   * @param $bbox optional
   * @param $c optional
   * @param $hl optional
   * @param $lat optional
   * @param $lon optional
   * @param $max_results optional
   * @param $pid optional
   * @param $q optional
   * @param $radius optional
   */
  public function trackActivities($bbox = null, $c = null, $hl = null, $lat = null, $lon = null, $max_results = null, $pid = null, $q = null, $radius = null) {
    return $this->activities->__call('track', array(array('bbox' => $bbox, 'c' => $c, 'hl' => $hl, 'lat' => $lat, 'lon' => $lon, 'max-results' => $max_results, 'pid' => $pid, 'q' => $q, 'radius' => $radius)));
  }

  /**
   * Implementation of the chili.activities.update method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.activities.update
   *
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $postBody required
   * @param $abuseType optional
   * @param $hl optional
   */
  public function updateActivities($postId, $scope, $userId, $postBody, $abuseType = null, $hl = null) {
    return $this->activities->__call('update', array(array('postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'postBody' => $postBody, 'abuseType' => $abuseType, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.comments.delete method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.comments.delete
   *
   * @param $commentId required
   * @param $postId required
   * @param $userId required
   * @param $hl optional
   */
  public function deleteComments($commentId, $postId, $userId, $hl = null) {
    return $this->comments->__call('delete', array(array('commentId' => $commentId, 'postId' => $postId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.comments.get method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.comments.get
   *
   * @param $commentId required
   * @param $postId required
   * @param $userId required
   * @param $hl optional
   * @param $targetLang optional
   */
  public function getComments($commentId, $postId, $userId, $hl = null, $targetLang = null) {
    return $this->comments->__call('get', array(array('commentId' => $commentId, 'postId' => $postId, 'userId' => $userId, 'hl' => $hl, 'targetLang' => $targetLang)));
  }

  /**
   * Implementation of the chili.comments.insert method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.comments.insert
   *
   * @param $postId required
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   */
  public function insertComments($postId, $userId, $postBody, $hl = null) {
    return $this->comments->__call('insert', array(array('postId' => $postId, 'userId' => $userId, 'postBody' => $postBody, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.comments.list method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.comments.list
   *
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   * @param $targetLang optional
   */
  public function listComments($postId, $scope, $userId, $c = null, $hl = null, $max_results = null, $targetLang = null) {
    return $this->comments->__call('list', array(array('postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results, 'targetLang' => $targetLang)));
  }

  /**
   * Implementation of the chili.comments.update method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.comments.update
   *
   * @param $commentId required
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $postBody required
   * @param $abuseType optional
   * @param $hl optional
   */
  public function updateComments($commentId, $postId, $scope, $userId, $postBody, $abuseType = null, $hl = null) {
    return $this->comments->__call('update', array(array('commentId' => $commentId, 'postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'postBody' => $postBody, 'abuseType' => $abuseType, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.groups.delete method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.groups.delete
   *
   * @param $groupId required
   * @param $userId required
   * @param $hl optional
   */
  public function deleteGroups($groupId, $userId, $hl = null) {
    return $this->groups->__call('delete', array(array('groupId' => $groupId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.groups.get method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.groups.get
   *
   * @param $groupId required
   * @param $userId required
   * @param $hl optional
   */
  public function getGroups($groupId, $userId, $hl = null) {
    return $this->groups->__call('get', array(array('groupId' => $groupId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.groups.insert method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.groups.insert
   *
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   */
  public function insertGroups($userId, $postBody, $hl = null) {
    return $this->groups->__call('insert', array(array('userId' => $userId, 'postBody' => $postBody, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.groups.list method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.groups.list
   *
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function listGroups($userId, $c = null, $hl = null, $max_results = null) {
    return $this->groups->__call('list', array(array('userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.groups.update method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.groups.update
   *
   * @param $groupId required
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   */
  public function updateGroups($groupId, $userId, $postBody, $hl = null) {
    return $this->groups->__call('update', array(array('groupId' => $groupId, 'userId' => $userId, 'postBody' => $postBody, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.people.delete method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.delete
   *
   * @param $groupId required
   * @param $personId required
   * @param $userId required
   * @param $hl optional
   */
  public function deletePeople($groupId, $personId, $userId, $hl = null) {
    return $this->people->__call('delete', array(array('groupId' => $groupId, 'personId' => $personId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.people.get method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.get
   *
   * @param $userId required
   * @param $hl optional
   */
  public function getPeople($userId, $hl = null) {
    return $this->people->__call('get', array(array('userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.people.liked method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.liked
   *
   * @param $groupId required
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function likedPeople($groupId, $postId, $scope, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->people->__call('liked', array(array('groupId' => $groupId, 'postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.people.list method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.list
   *
   * @param $groupId required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function listPeople($groupId, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->people->__call('list', array(array('groupId' => $groupId, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.people.relatedToUri method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.relatedToUri
   *
   * @param $userId required
   * @param $hl optional
   * @param $uri optional
   */
  public function relatedToUriPeople($userId, $hl = null, $uri = null) {
    return $this->people->__call('relatedToUri', array(array('userId' => $userId, 'hl' => $hl, 'uri' => $uri)));
  }

  /**
   * Implementation of the chili.people.reshared method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.reshared
   *
   * @param $groupId required
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function resharedPeople($groupId, $postId, $scope, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->people->__call('reshared', array(array('groupId' => $groupId, 'postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.people.search method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.search
   *
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   * @param $q optional
   */
  public function searchPeople($c = null, $hl = null, $max_results = null, $q = null) {
    return $this->people->__call('search', array(array('c' => $c, 'hl' => $hl, 'max-results' => $max_results, 'q' => $q)));
  }

  /**
   * Implementation of the chili.people.update method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.people.update
   *
   * @param $groupId required
   * @param $personId required
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   */
  public function updatePeople($groupId, $personId, $userId, $postBody, $hl = null) {
    return $this->people->__call('update', array(array('groupId' => $groupId, 'personId' => $personId, 'userId' => $userId, 'postBody' => $postBody, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photoAlbums.delete method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photoAlbums.delete
   *
   * @param $albumId required
   * @param $userId required
   * @param $hl optional
   */
  public function deletePhotoAlbums($albumId, $userId, $hl = null) {
    return $this->photoAlbums->__call('delete', array(array('albumId' => $albumId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photoAlbums.get method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photoAlbums.get
   *
   * @param $albumId required
   * @param $userId required
   * @param $hl optional
   */
  public function getPhotoAlbums($albumId, $userId, $hl = null) {
    return $this->photoAlbums->__call('get', array(array('albumId' => $albumId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photoAlbums.insert method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photoAlbums.insert
   *
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   */
  public function insertPhotoAlbums($userId, $postBody, $hl = null) {
    return $this->photoAlbums->__call('insert', array(array('userId' => $userId, 'postBody' => $postBody, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photoAlbums.list method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photoAlbums.list
   *
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function listPhotoAlbums($scope, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->photoAlbums->__call('list', array(array('scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.photos.delete method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photos.delete
   *
   * @param $albumId required
   * @param $photoId required
   * @param $userId required
   * @param $hl optional
   */
  public function deletePhotos($albumId, $photoId, $userId, $hl = null) {
    return $this->photos->__call('delete', array(array('albumId' => $albumId, 'photoId' => $photoId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photos.get method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photos.get
   *
   * @param $albumId required
   * @param $photoId required
   * @param $userId required
   * @param $hl optional
   */
  public function getPhotos($albumId, $photoId, $userId, $hl = null) {
    return $this->photos->__call('get', array(array('albumId' => $albumId, 'photoId' => $photoId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photos.insert method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photos.insert
   *
   * @param $albumId required
   * @param $userId required
   * @param $postBody required
   * @param $hl optional
   */
  public function insertPhotos($albumId, $userId, $postBody, $hl = null) {
    return $this->photos->__call('insert', array(array('albumId' => $albumId, 'userId' => $userId, 'postBody' => $postBody, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photos.insert2 method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photos.insert2
   *
   * @param $albumId required
   * @param $userId required
   * @param $hl optional
   */
  public function insert2Photos($albumId, $userId, $hl = null) {
    return $this->photos->__call('insert2', array(array('albumId' => $albumId, 'userId' => $userId, 'hl' => $hl)));
  }

  /**
   * Implementation of the chili.photos.listByAlbum method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photos.listByAlbum
   *
   * @param $albumId required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function listByAlbumPhotos($albumId, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->photos->__call('listByAlbum', array(array('albumId' => $albumId, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.photos.listByScope method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.photos.listByScope
   *
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function listByScopePhotos($scope, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->photos->__call('listByScope', array(array('scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * Implementation of the chili.related.list method.
   * See: http://code.google.com/apis/buzz/v1/using_rest.html#chili.related.list
   *
   * @param $postId required
   * @param $scope required
   * @param $userId required
   * @param $c optional
   * @param $hl optional
   * @param $max_results optional
   */
  public function listRelated($postId, $scope, $userId, $c = null, $hl = null, $max_results = null) {
    return $this->related->__call('list', array(array('postId' => $postId, 'scope' => $scope, 'userId' => $userId, 'c' => $c, 'hl' => $hl, 'max-results' => $max_results)));
  }

  /**
   * @return the $io
   */
  public function getIo() {
    return $this->io;
  }

  /**
   * @return the $version
   */
  public function getVersion() {
    return $this->version;
  }

  /**
   * @return the $restBasePath
   */
  public function getRestBasePath() {
    return $this->restBasePath;
  }

  /**
   * @return the $rpcPath
   */
  public function getRpcPath() {
    return $this->rpcPath;
  }
}
